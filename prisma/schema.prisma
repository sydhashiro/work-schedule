generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String          @id @default(cuid())
  email     String          @unique
  name      String?
  hashedPassword String          // ← Add this line
  role      Role            @default(MANAGER)
  schedules ScheduleEntry[] @relation("UserSchedules")
}

model Department {
  id      String                 @id @default(cuid())
  name    String                 @unique
  budgets WeekBudget[]
  members TeamMemberDepartment[]
  shifts  ScheduleEntry[]        @relation("DepartmentShifts")
}

model WeekBudget {
  id           String   @id @default(cuid())
  departmentId String
  weekStart    DateTime
  allowedHours Int

  Department Department @relation(fields: [departmentId], references: [id])

  @@unique([departmentId, weekStart])
}

model TeamMember {
  id             String                 @id @default(cuid())
  displayName    String
  desiredHours   Int
  availabilities AvailabilityBlock[]
  departments    TeamMemberDepartment[]
  shifts         ScheduleEntry[]        @relation("MemberShifts")
}

model TeamMemberDepartment {
  teamMemberId String
  departmentId String
  primary      Boolean @default(false)

  TeamMember TeamMember @relation(fields: [teamMemberId], references: [id])
  Department Department @relation(fields: [departmentId], references: [id])

  @@id([teamMemberId, departmentId])
}

model AvailabilityBlock {
  id           String @id @default(cuid())
  teamMemberId String
  dayOfWeek    Int // 0–6
  startMinutes Int
  endMinutes   Int

  TeamMember TeamMember @relation(fields: [teamMemberId], references: [id])
}

model ScheduleEntry {
  id           String   @id @default(cuid())
  weekStart    DateTime
  dayOfWeek    Int
  startMinutes Int
  endMinutes   Int
  departmentId String
  teamMemberId String
  userId       String?

  Department Department @relation("DepartmentShifts", fields: [departmentId], references: [id])
  TeamMember TeamMember @relation("MemberShifts", fields: [teamMemberId], references: [id])
  User       User?      @relation("UserSchedules", fields: [userId], references: [id])
}

enum Role {
  MANAGER
  VIEWER
}
